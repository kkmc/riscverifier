begin_spec(printm)
requires(true);
ensures (true);
end_spec

begin_spec(region_get_addr)
requires ((0x0bv32 <= i) && (i < 16bv32));
ensures (($exception == 0bv64) ==> ($ret == regions[i].addr));
end_spec

begin_spec(is_pmp_region_valid)
ensures true;
end_spec

begin_spec(region_pmpcfg_val)
ensures true;
end_spec

begin_spec(region_register_idx)
ensures true;
end_spec

begin_spec(region_is_tor)
requires ((0bv32 <= i) && (i < 16bv32));
ensures ((($exception == 0bv64) && (regions[i].addrmode == 8bv8)) ==> ($ret == 1bv32));
ensures ((($exception == 0bv64) && (regions[i].addrmode != 8bv8)) ==> ($ret == 0bv32));
end_spec

begin_spec(region_needs_two_entries)
ensures true;
end_spec

begin_spec(region_is_napot)
requires ((0bv32 <= i) && (i < 16bv32));
ensures ((($exception == 0bv64) && (regions[i].addrmode == 24bv8)) ==> ($ret == 1bv32));
ensures ((($exception == 0bv64) && (regions[i].addrmode != 24bv8)) ==> ($ret == 0bv32));
end_spec

begin_spec(region_is_napot_all)
requires ((0bv32 <= i) && (i < 16bv32));
ensures ((($exception == 0bv64) && ((regions[i].addr == 0bv64) && (regions[i].size == -1))) ==> ($ret == 1bv32));
ensures ((($exception == 0bv64) && ((regions[i].addr != 0bv64) || (regions[i].size != -1))) ==> ($ret == 0bv32));
end_spec

begin_spec(region_pmpaddr_val)
ensures true;
end_spec

begin_spec(pmp_set)
ensures true;
end_spec
