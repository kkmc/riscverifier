alpha = { 'a'..'z' | 'A'..'Z' }
digit = { '0'..'9' }
ident = { (alpha | "_") ~ (alpha | digit | "_" | ".")* }
hex_alpha = { 'a'..'f' | 'A'..'F' }
decimal = { (digit)+ }
neg_decimal = { "-" ~ decimal }
hexidecimal_without_prefix = { (hex_alpha | digit)+ }
hexidecimal = { "0" ~ "x" ~ hexidecimal_without_prefix }
callee_offset = { "<" ~ ident ~ ("+" ~ hexidecimal)? ~ ">" }
inst_ext = { ("." ~ ident)+ }
instr_op = { ident ~ inst_ext? }
offset_operand = { decimal ~ "(" ~ ident ~ ")" }
operand = { ident | offset_operand | hexidecimal | hexidecimal_without_prefix | decimal | neg_decimal }
assembly_line = { hexidecimal_without_prefix ~ " " ~ callee_offset ~ " " ~ instr_op ~ (" " ~ operand ~ ("," ~ operand)*)? ~ (" " | ANY)* }
