WHITESPACE = _{ " " | NEWLINE }
COMMENT = _{ ("/*" ~ (!"*/" ~ ANY)* ~ "*/") | ("//" ~ (!NEWLINE ~ ANY)* ~ NEWLINE) }

char = { ASCII_ALPHANUMERIC | "_" }

integer = @{ "-"? ~ ASCII_DIGIT+ }
identifier = @{ "$"? ~ ASCII_ALPHA ~ char* }

old = @{ "old" }

comp_op = @{ "<=_u" | ">=_u" | "<=" | ">=" | "<_u" | ">_u" | "==" | "<" | ">" }
bool_op = @{ "||" | "&&" | "==>" | "<==>" | "!" }
bit_op = @{ "|" | "&" | "+" | "-" }

array_index = { "[" ~ value_expr ~ "]" }

get_field = { "." ~ identifier }

comp_eval = { "(" ~ value_expr ~ comp_op ~ value_expr ~ ")" }

bool_eval = { "(" ~ bool_expr ~ bool_op ~ bool_expr ~ ")" }

bv_eval = { "(" ~ value_expr ~ bit_op ~ value_expr ~ ")" }

bool_const = @{ "true"
			  | "false"
			  }

path = { path_ref? ~ identifier ~ (array_index | get_field)* }
path_ref = @{ "&" }

p_value_expr = _{ "(" ~ value_expr ~ ")" }
value_expr = { bv_eval
			 | path
 			 | integer
 			 | p_value_expr
 			 }

p_bool_expr = _{ "(" ~ bool_expr ~ ")"}
bool_expr =  { comp_eval
			 | bool_eval
			 | bool_const
		     | p_bool_expr
			 }

spec_type = @{ "requires" | "ensures" }

spec_stmt = { spec_type ~ bool_expr ~ ";"* }

spec_end = _{ "end_spec" }
spec_begin = _{ "begin_spec" }
func_name = { identifier }
func_spec = { spec_begin ~ "(" ~ func_name ~ ")" ~ (spec_stmt)+ ~ spec_end }

func_specs = { SOI ~ func_spec+ ~ EOI}